div {
    /* 网格布局 */
    display: grid;

    /* 
      columns 列   rows 行
        px划分
        grid-template-rows: 20px 20px 20px;

        fr划分
        grid-template-rows: 1fr 2fr 3fr;

        50px重复三次
        grid-template-columns: repeat(3, 50px);
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr);

        自动填充 每行20% 直到填充不下
        grid-template-columns: repeat(auto-fill, 20%);

        auto 自动填充
        grid-template-columns: auto 50px 50px;

        minmax(num1, num2)函数
        可以理解成最小最大值函数
        参数1代表的是最小值
        参数2代表的是最大值 
        如果条件允许，则一直使用最大值
        如果条件不满足则使用中间值 如果剩下的距离不足以显示距离大小，则使用最小值
        grid-template-rows: 50px 50px minmax(50px, auto);
    */
    grid-template-columns: repeat(3, 100px);
    grid-template-rows: repeat(3, 100px);


    /* 调整间距属性 表示行间距和列间距 */
    grid-gap: 10px 10px;


    /* 
      grid-auto-flow 调整顺序 
        row:横向显示 
        column:纵向显示 
    */
    grid-auto-flow: column;


    /* 
      对其方式 
        水平对其方式：justify-items 

        垂直对其方式：align-items 

        start center end stretch拉伸

      justify-items: center;
      align-items: center; 
      复合属性 place-item：align-items  justify-items 
    */
    place-items: start center;

    /* 
      网格对齐方式 
        水平对其方式：justify-content 
        垂直对其方式：align-content 
      复合属性 place-content： align-content  justify-content 
    */
    place-content: center center;

    /* 其他取值
         stretch:代表的是拉伸默认值
         space-around:行列间距环绕
         space-between:行列两端对其
         space-evenly:行列间距平分
    */
}

.item {
    /* 项目属性
        grid-column-start  纵向网格线开始占位
        grid-column-end   纵向网格线结束占位
        grid-row-start   横向网格线开始占位  
        grid-row-end    横向网格线结束占位
    简化代码 
        grid-row: 2/3;
        grid-column: 1/3;
    */
    grid-column: 1 / span 3;
    grid-row: 2 / 3;
}