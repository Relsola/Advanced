/* 
   flex布局 
   1. 容器: display:flex; 
   2. 项目：item  
   3. 主轴: x 是水平方向，项目默认在主轴上排列 
   4.交叉轴: y 和主轴垂直的轴线，叫交叉轴
*/

div {
    display: flex;

    /* 
        row默认值 水平方自左向右，起点在左边
        row-reverse 水平方向 自右向左 起点在右边
        
        column 垂直方向 自上而下 起点在上面
        column-reverse 垂直方向 自下而上 起点在下面
    */
    flex-direction: row;

    /* 默认不换行 换行: wrap */
    flex-wrap: nowrap;

    /* flex-flow是 flex-direction 和 flex-wrap的组合方式 */
    flex-flow: row nowrap;

    /* 
      justify-content 设置主轴方向排列
        flex-start 默认左对齐 主轴的起点在左方
        flex-end 右对齐
        center 两端居中
        space-between 两端对齐（项目之间的距离相等）
        space-around 项目两侧距离相等 从而两个项目之间的距离会是2倍
        space-evenly 项目之间的间隔和边框相等 平均分布
    */
    justify-content: space-around;


    /* 
      align-items 项目在交叉轴的排列方式
        flex-start默认值 交叉轴的起点（顶部）对齐
        flex-end 交叉轴的终点（底部）对齐
        center 交叉轴的中点开始排列 居中
        stretch 拉大边长 如果项目没有设置高度时，高度会占满整个交叉轴
        baseline 基线 项目中文字基线对齐
    */
    align-items: center;


    /* 
      align-content 多根轴线的对齐方式
        flex-start 多根主轴与交叉轴的起点对齐
        flex-end 多根主轴合并在交叉轴的起点下排列
        center 多根主轴合并在交叉轴的中点（中间）排列
        stretch 如果项目没有设置高度时，会占满全屏
        space-between 与交叉轴的两端对齐（上下） 轴线之间的间隔平均分布
        space-around 每根轴线的两侧（上下）的间隔距离相等 轴线之间的间隔比庇轴线与边框之间的间隔大一倍
        space-evenly项目之间的距离相等
    */
}



/* 在项目中设置的属性 */
span {
    /* order 可以设置任意数（正负整数和0都可以 ）值越小，越排在前面 */
    order: 0;

    /* 项目在交叉轴顶部对齐（默认值） */
    align-self: flex-start;

    /* 项目在交叉轴底部对齐 */
    align-self: flex-end;

    /* 项目在交叉轴的中部对齐 */
    align-self: center;

    /* 基线对齐 了解 */
    align-self: baseline;

    /* flex-grow  均分*/

    /* flex-shrink 默认值是1 值越大，压缩越厉害 非负数 */

    /*flex-basis 可以设置项目的宽度 等同于width  但是优先级比width高 */
}