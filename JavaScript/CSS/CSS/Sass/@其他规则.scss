// @extend 不建议在项目中使用 -------------------------------
// @extend会大大增加CSS文件的大小，并且在不加保护的情况下影响CSS的性能
.foo {
    color: black;
    border: 1px solid black;
}

.bar {
    @extend .foo;
    background-color: red;
}

// css
.foo,
.bar {
    color: black;
    border: 1px solid black;
}

.bar {
    background-color: red;
}


// @import ----------------------------------------------
/* 
   @import最常见的用法是引入一个.scss文件
    
     <style lang="scss" scoped>
       @import './index.scss';
     </style>
*/
// 当然，也可以在嵌套规则中使用@import
// dark.scss
div {
    background-color: #333;
    color: #fff;
}

.box.is-dark {
    @import './dark.scss';
}

// css
.box.is-dark div {
    background-color: #333;
    color: #fff;
}



// @use ----------------------------------------
// SASS中的@use可以加载其他scss样式表中的mixins，functions和variables，同时可以对加载的模块做一些其他额外的事情
// dark.scss文件
div {
    background-color: #333;
    color: #fff;
}

// 此处的use仅仅只是把`dark.scss`中的代码合并到当前样式表中，和`@import`的作用一样。
@use 'dark';

.box {
    background-color: #58a;
}


// css
div {
    background-color: #333;
    color: #fff;
}

.box {
    background-color: #58a;
}

// @use可以在引入的时候可以做一些额外的事情，例如使用自定义命名空间
// mixins.scss
@mixin ellipsis {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

// index.scss
@use 'mixins.scss' as mix; // 默认的命名空间为mixins

/* 
   .box {
     @include mix.ellipsis;
    }
*/

// @use也可以对加载的模块进行配置 -----------------------------
// mixins.scss
$defaultLine: 2;

@mixin multiline-ellipsis($line: $defaultLine) {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
    text-overflow: ellipsis;
    overflow: hidden;
}

// index.scss
@use 'mixins.scss' as mix with ($defaultLine: 3);

.box {
    @include mix.multiline-ellipsis;
}

// css
.box {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    text-overflow: ellipsis;
    overflow: hidden;
}


// @at-root --------------------------------------
// @at-root的作用通常使用来把样式置顶到当前样式表文档的根部，这在一些嵌套样式中有时候非常有用
.wrapper {
    .box {

        // 使用at-root，把.box-input样式置顶到最外层
        @at-root .box-input {
            font-size: 14px;
        }

        // 不使用at-root，遵循嵌套规则
        .box-input {
            font-size: 14px;
        }
    }
}
// css
// 使用at-root编译结果
.box-input {
    font-size: 14px;
}

// 不使用at-root编译结果
.wrapper .box .box-input {
    font-size: 14px;
}



// @debug、@error、@warn --------------------------------------
/* 
  SASS中的@debug、@error、@warn分别和JavaScript中的
  console.log()、console.error()、console.warn()类似。 
  @debug可以打印一些信息，在这调试一些表达式或变量值的时候非常有用
*/

@mixin position($name, $position, $topOrBottom, $leftOrRight) {
    @debug $name,
    $position;

    #{$name}.is-#{$position} {
        position: $position;
        #{$topOrBottom}: 0;
        #{$leftOrRight}: 0;
    }
}

@include position('.box', 'absolute', 'top', 'left');

// 打印内容
// @规则.scss:9 Debug: ".box", "absolute"


// @warn和@error通常用来对外部传入的值进行校验，看是否符合规范，如果不符合则提示警告信息和报错信息

@mixin position($name, $position, $topOrBottom, $leftOrRight) {
    @if $position !='relative' and $position !='absolute' {
        @warn 'position must be relative or absolute'
    }

    ;

    @if $topOrBottom !='top' and $topOrBottom !='bottom' {
        @error 'topOrBottom must be top or bottom'
    }

    ;

    #{$name}.is-#{$position} {
        position: $position;
        #{$topOrBottom}: 0;
        #{$leftOrRight}: 0;
    }
}

@include position('.box', 'fixed', 'top1', 'left');

// 警告内容
// Warning: "position must be relative or absolute"
// 报错内容
// Error: "topOrBottom must be top or bottom"