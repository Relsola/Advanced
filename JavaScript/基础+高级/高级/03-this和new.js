/*
  this不管在什么时候 都是一个已经存在的变量,在不同的时候，this指向的东西是不一样的

  this的绑定：
     1. 默认绑定
     2. 隐式绑定
     3. 显示绑定
     4. new绑定
*/

// 默认绑定 当一个函数独立调用的时候 this指向是window

// 隐式绑定 对于对象使用方法 this隐式绑定该对象

// 显示绑定
// call函数的作用 改变this的指向并且让函数执行
// apply 传参方式不一样 需要把参数放到一个数组里面
// bind绑定 传参方式和call一样 返回一个绑定好this的新函数

// new绑定
// 显示绑定优先级高于隐式绑定  new优先级别高于隐式


/* 
    1.this 默认的时候函数独立调用 window
        2.方法被对象调用，this指的是对象
        3.call bind apply 取决于参数
        4.new 指向的是新的实例对象
        5.事件监听 this指的是事件源
        6.定时器 是window
        7.立即执行函数指的是window
        8.内置的高级函数 取决于参数
*/



/* 
  new运算符
    1.在构造器函数内部创建了一个对象
    2.把构造器内部的this指向了这个对象
    3.执行函数
    4.返回了这个对象

  返回值情况
    1.如果构造器函数返回的是基本数据类型，外边得到的是新创建的对象
    2.如果构造器函数返回的是引用数据类型，外边得到的是构造器函数返回值

  私有属性和共有属性
    针对于类来说的 不是针对于对象来说
    私有是指 只能在构造器内部访问的属性
*/