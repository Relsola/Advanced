/* 

事件冒泡:从内到外触发事件，由子集向父级传播
事件捕获：从外到内 由父级向子集传播


如果事件捕获和冒泡同时存在，先捕获，再冒泡



事件委托就是利用事件冒泡，指定一个事件处理程序，就可以管理某一类型的所有事件。
  如果子元素有很多，且子元素的事件监听逻辑都相同
  将事件监听绑定到父元素身上或者共有的祖先元素上
  事件委托原理是利用事件冒泡，子元素触发，父元素执行回调函数。

  好处：
    1. 减少事件的绑定次数
    2. 新增元素不需要单独绑定
*/


// 事件对象常用属性
target // 事件绑定的元素

currentTarget // 触发事件的元素，两者没有冒泡的情况下，是一样的值，但在使用了事件委托的情况下，就不一样了。

preventDefault() // 阻止默认行为，比如阻止超链接跳转、在form中按回车会自动提交表单。

stopPropagation() // 阻止冒泡传播

